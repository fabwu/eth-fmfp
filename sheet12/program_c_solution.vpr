// since a^b is not built in (write pow(a,b) for a^b)
function pow(a: Int, b: Int): Int
  requires b >= 0;
  requires a > 0;
{
  ( b == 0 ? 1 : a * pow(a,b-1) )
}


method log(n : Int) returns (b : Int)
  requires n >= 1;
  ensures b>=0 && pow(10,b) <= n && n < pow(10,b+1);
{
  var a : Int;
  
  a := 1;
  b := 0;

  while (a<n) 
    invariant b >= 0 && (a <= n ==> a == pow(10,b)) && (a>n ==> a==pow(10,b+1)) && pow(10,b) <= n;
  {
    a := a * 10;
    if (a <= n) {
      b := b + 1;
    } 
  }
}