// Note that a / b is precise (real-number) division in Viper; for integer division one uses the syntax a \ b.
// This truncates (as integer division does in e.g. C or Java), so that e.g. 3\2 = 1

method ProgramH(X : Int, Y : Int)
  requires X <= Y;  // pre-condition
  ensures true;     // post-condition
{
  var x : Int := X;
  var y : Int := Y;

  while (x < y) 
    invariant x <= y && (x + y) / 2 == (X + Y) \ 2; // your invariant should replace "true", here
  {
    y := y - 1;
    if (x < y) {
      x := x + 1;
    } else {
      // skip
    }
  }

  assert x == y && x == (X + Y) \ 2; // Note that Viper performs integer division here; i.e. (X + Y) \ 2 is the same as floor((X + Y) \ 2).
}